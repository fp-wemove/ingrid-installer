<!--
  **************************************************-
  InGrid Installer
  ==================================================
  Copyright (C) 2014 wemove digital solutions GmbH
  ==================================================
  Licensed under the EUPL, Version 1.1 or â€“ as soon they will be
  approved by the European Commission - subsequent versions of the
  EUPL (the "Licence");
  
  You may not use this work except in compliance with the Licence.
  You may obtain a copy of the Licence at:
  
  http://ec.europa.eu/idabc/eupl5
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the Licence is distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the Licence for the specific language governing permissions and
  limitations under the Licence.
  **************************************************#
  -->
<project name="Installer Utils Script" basedir=".">

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <!--

    ***************************************************************************************
    * MACROS
    ***************************************************************************************

    -->

    <macrodef name="patchFile">
        <attribute name="patchFile" description="File containing the patch."/>
        <attribute name="originalFile" description="File to apply the patch to."/>
        <sequential>
            <var name="TODAY" unset="true"/>
            <var name="patchErrorCode" unset="true"/>
            <tstamp>
                <format property="TODAY" pattern="yyyyMMdd-hhmmss.S" locale="de"/>
            </tstamp>
            <copy file="@{originalFile}" tofile="@{originalFile}.${TODAY}" overwrite="true" />
            <if>
                <os family="unix" />
                <then>
                    <!-- convert dest and patch file to linux format -->
                    <exec executable="tr">
                        <arg line="-d '\r'" />
                        <redirector input="@{patchFile}" output="@{patchFile}.converted" />
                    </exec>
                    <exec executable="tr">
                        <arg line="-d '\r'" />
                        <redirector input="@{originalFile}.${TODAY}" output="@{originalFile}" />
                    </exec>
                    <exec executable="patch" resultproperty="patchErrorCode">
                        <arg line="-l -u -i @{patchFile}.converted @{originalFile}" />
                    </exec>
                </then>
            </if>

            <echo message="Patching file '@{originalFile}' with patch '@{patchFile}'." />
            
            <exec dir="." executable="cmd.exe" osfamily="Windows" output="output.log" resultproperty="patchErrorCode">
                <arg line="/c patch -l -u -i @{patchFile} @{originalFile}"/>
            </exec>
            
            <echo>patchErrorCode: ${patchErrorCode}</echo>

            <if>
                <not>
                    <equals arg1="${patchErrorCode}" arg2="0"/>
                </not>
                <then>
                    <copy file="@{originalFile}.rej" tofile="@{originalFile}.rej.${TODAY}" overwrite="true" />
                    <echo>
*****************************************************
* PATCH-ERROR: Please check file: @{originalFile}.rej.${TODAY}
*****************************************************
                    </echo>
                    <var name="PatchErrors" value="${PatchErrors}, @{originalFile}.rej.${TODAY}" />
                </then>
            </if>
        </sequential>
    </macrodef>

    <scriptdef name="compareVersion" language="javascript">
        <attribute name="value1" />
        <attribute name="value2" />
        <attribute name="prop" />
        <![CDATA[
                var version = attributes.get('value1')+"";
                var tVersion = attributes.get('value2')+"";
                var property = attributes.get('prop')+"";
                var versionSplitted = version.split(".");
                var tVersionSplitted = tVersion.split('.');
                var determined = false;
                for (var i=0; i<versionSplitted.length; i++) {
                    var intVersion = parseInt(versionSplitted[i]);
                    var intTVersion = parseInt(tVersionSplitted[i]);
                    if (intVersion < intTVersion) {
                        project.setProperty(property, -1);
                        determined = true;
                        break;
                    } else if (intVersion > intTVersion) {
                        project.setProperty(property, +1);
                        determined = true;
                        break;
                    }
                }
                if (!determined)
                    project.setProperty(property, 0);
            ]]>
    </scriptdef>

    <scriptdef name="msec" language="javascript">
        <attribute name="property"/>
        <element name="fileset" type="fileset"/>
        <![CDATA[
            project.setNewProperty(attributes.get("property"), (new java.util.Date()).getTime()
    );
        ]]>
    </scriptdef>
    
    <!--

    ***************************************************************************************
    * ANTINSTALLER POST-DISPLAY-TARGETS
    ***************************************************************************************

    -->

    <target name="antinstaller-determineVersion">
        <!-- check differend paths to lib ! No way to add directory with "*" placeholder !? -->
        <antinstaller-log message="libraryDir(s) (separated by ','): ${libraryDir}" />
        <!-- check all libDirs and break if found ! -->
        <for list="${libraryDir}" param="myLibDir" keepgoing="true">
            <sequential>
                <if>
                    <not>
                        <isset property="break.flag.versionFound"/>
                    </not>
                    <then>
                        <antinstaller-log message="checking libDir: @{myLibDir}" />

                        <fileset erroronmissingdir="false" dir="${installDir}/@{myLibDir}" id="componentLibrary" includes="${libraryIdent}*.jar" />
                        <antinstaller-log message="checking jar File: ${toString:componentLibrary}" />

                        <condition property="isJar">
                            <matches string="${toString:componentLibrary}" pattern=".jar$"/>
                        </condition>

                        <!-- <propertyregex 
                            property="oldVersion" 
                            input="${toString:componentLibrary}" 
                            regexp=".*${libraryIdent}(.*)\.jar"
                            select="\1" /> -->

                        <var name="zip.Implementation-Version" unset="true"/>
                        <if>
                            <isset property="isJar" />
                            <then>
                                <loadproperties prefix="zip">
                                    <zipentry zipfile="${installDir}/@{myLibDir}/${toString:componentLibrary}" name="META-INF/MANIFEST.MF"/>
                                </loadproperties>
                            </then>
                            <else>
                                <echo message="checking property file: ${installDir}/@{myLibDir}/${libraryIdent}" />
                                <property file="${installDir}/@{myLibDir}/${libraryIdent}" prefix="zip"/>
                            </else>
                        </if>
                        <if>
                            <isset property="zip.Implementation-Version"/>
                            <then>
                                <property name="oldVersion" value="${zip.Implementation-Version}" />
                                <property name="break.flag.versionFound" value="true"/>
                            </then>
                        </if>
                        <antinstaller-log message="Version installed: ${oldVersion}" />
                    </then>
                </if>
            </sequential>
        </for>

        <if>
            <isset property="oldVersion"/>
            <then>
                <compareVersion value1="${oldVersion}" value2="${minSupportedVersion}" prop="myResult"/>
            </then>
        </if>
        
        <if>
            <equals arg1="${myResult}" arg2="-1" />
            <then>
                <property name="unsupportedVersion" value="true"/>
                <!-- Pass props back to main installer -->
                <antinstaller-property name="unsupportedVersion" value="true"/>
                <antinstaller-property name="oldVersion" value="${oldVersion}" />
                <antinstaller-message message="ERROR: Version ${oldVersion} not supported for update! Please do a new installation." />
                <fail if="unsupportedVersion">Version ${oldVersion} not supported for update! Please do a new installation.</fail>
            </then>
        </if>        

        <antinstaller-log message="versionsWithConfigurations: '${versionsWithConfigurations}'" />
        <for list="${versionsWithConfigurations}" param="confVersion">
            <sequential>
                <compareVersion value1="@{confVersion}" value2="${oldVersion}" prop="compResult"/>
                <antinstaller-log message="compared @{confVersion} with ${oldVersion}: ${compResult}"/>
                <if> <!-- versionWithConfigurations >= oldVersion -->
                    <not>            
                        <equals arg1="${compResult}" arg2="-1" />
                    </not>
                    <then>
                        <antinstaller-log message="add 'NeedsConfiguration@{confVersion}' to installer" />
                        <antinstaller-property name="NeedsConfiguration@{confVersion}" value="true" />
                    </then>
                </if>
            </sequential>
        </for>

        <if>
            <isset property="oldVersion"/>
            <then>
                <antinstaller-property name="oldVersion" value="${oldVersion}" />
            </then>
        </if>

        <!-- CHECK FOR PATCH COMMAND ON UNIX -->
        <exec osfamily="unix" executable="patch" failifexecutionfails="false" resultproperty="patchErrorCode">
            <arg value="--version" />
        </exec>
        <if>
            <and>
                <os family="unix" />
                <not>
                    <equals arg1="${patchErrorCode}" arg2="0" />
                </not>
            </and>
            <then>
                <antinstaller-message message="Patch-Command not found!" />
                <antinstaller-property name="patchNotFound" value="true" />
            </then>
        </if>
    </target>

    <target name="checkPreconditionsForUpdate">
        <fail if="unsupportedVersion">The version ${oldVersion} is not supported for update! Please do a new installation.</fail>
        <fail unless="oldVersion">The previous version could not be determined!</fail>
        <fail if="patchNotFound">The patch command was not found on the system!</fail>
    </target>

    <target name="showPatchErrors">
        <if>
            <isset property="PatchErrors" />
            <then>
                <echo>
*********************************************
*********************************************
* THERE WERE PATCH ERRORS:
* Please look at: ${PatchErrors}
*********************************************
*********************************************
                </echo>
            </then>
        </if>
    </target>

    <target name="antinstaller-showResult">
        <antinstaller-message message="OK! :)" />
    </target>
</project>